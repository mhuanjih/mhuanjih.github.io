"use strict";(self.webpackChunkblog_demo=self.webpackChunkblog_demo||[]).push([[7586],{4238:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-4b123acb",path:"/base/public.html",title:"生成随机数的三种方法",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"方法一：使用字符串截取提取随机密码",slug:"方法一-使用字符串截取提取随机密码",children:[]},{level:3,title:"方法二：使用命令生成随机数据",slug:"方法二-使用命令生成随机数据",children:[]},{level:3,title:"方法三：使用设备文件生成随机数据",slug:"方法三-使用设备文件生成随机数据",children:[]}],git:{updatedTime:null,contributors:[]}}},4017:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="生成随机数的三种方法" tabindex="-1"><a class="header-anchor" href="#生成随机数的三种方法" aria-hidden="true">#</a> 生成随机数的三种方法</h1><p>背景：   创建账户时我们需要配置初始随机密码，使用手机号注册时需要随机验证码，抽奖活动需要随机点名，俄罗斯方块游戏需要随机出形状。这些案例都在说明一个问题，随机数据很重要！而在 Shell 脚本中如果需要生成随机数据有哪些方式呢？下面我们依次看看都有哪些方式。</p><h3 id="方法一-使用字符串截取提取随机密码" tabindex="-1"><a class="header-anchor" href="#方法一-使用字符串截取提取随机密码" aria-hidden="true">#</a> 方法一：使用字符串截取提取随机密码</h3><p>定义字符串取值范围，利用随机截取一位，通过循环迭代，拼凑取出适合长度的字符串</p><p>自定义变量: 例如 10 个数字+52 个字符（26位英文字母大小写）</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>key<span class="token operator">=</span><span class="token string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>\n\n<span class="token function">randpass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">-</span>z <span class="token string">&quot;$1&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>then\n echo <span class="token string">&quot;randpass 函数需要一个参数,用来指定提取的随机数个数.&quot;</span>\n <span class="token keyword">return</span> <span class="token number">127</span>\n fi\n<span class="token comment">// 调用$1 参数,循环提取任意个数据字符</span>\n<span class="token comment">// 用随机数对 62 取余数,返回的结果为[0-61]</span>\n pass<span class="token operator">=</span><span class="token string">&quot;&quot;</span>\n <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">seq $1</span><span class="token template-punctuation string">`</span></span>\n <span class="token keyword">do</span>\n num<span class="token operator">=</span>$<span class="token punctuation">[</span><span class="token constant">RANDOM</span><span class="token operator">%</span>$<span class="token punctuation">{</span>#key<span class="token punctuation">}</span><span class="token punctuation">]</span>\n local tmp<span class="token operator">=</span>$<span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span>num<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span>\n pass<span class="token operator">=</span>$<span class="token punctuation">{</span>pass<span class="token punctuation">}</span>$<span class="token punctuation">{</span>tmp<span class="token punctuation">}</span>\n done\n echo $pass\n<span class="token punctuation">}</span>\nrandpass <span class="token number">8</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="方法二-使用命令生成随机数据" tabindex="-1"><a class="header-anchor" href="#方法二-使用命令生成随机数据" aria-hidden="true">#</a> 方法二：使用命令生成随机数据</h3><p>Linux 本身有些命令是可以提供随机字符串，或者是对一些字符串进行加密，通过调用这些命令生成的字符串配合一些截取命令，可以轻松获得指定长度的随机字符串。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span>root@centos7 <span class="token operator">~</span><span class="token punctuation">]</span> <span class="token comment">// uuidgen 生成 16 进制随机字符串</span>\nd1c7c974<span class="token operator">-</span><span class="token number">2e94</span><span class="token operator">-</span>4f31<span class="token operator">-</span>bdd7<span class="token operator">-</span>0b2f697aea6b\n<span class="token punctuation">[</span>root@centos7 <span class="token operator">~</span><span class="token punctuation">]</span> <span class="token comment">// openssl rand -hex 4 生成 16 进制随机字符串</span>\n38a61465\n<span class="token punctuation">[</span>root@centos7 <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment">// openssl rand -base64 6</span>\n7ZwWj1hX\n<span class="token punctuation">[</span>root@centos7 <span class="token punctuation">]</span><span class="token comment">// echo 123|md5sum</span>\nba1f2511fc30423bdbb183fe33f3dd0f\n<span class="token punctuation">[</span>root@centos7 <span class="token punctuation">]</span><span class="token comment">//  a=$(echo 123|sha256sum)</span>\n<span class="token punctuation">[</span>root@centos7 <span class="token punctuation">]</span><span class="token comment">// echo ${a:1:6}</span>\n81210f\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="方法三-使用设备文件生成随机数据" tabindex="-1"><a class="header-anchor" href="#方法三-使用设备文件生成随机数据" aria-hidden="true">#</a> 方法三：使用设备文件生成随机数据</h3><p>在 Linux 操作系统中默认提供了两个可以生成随机数据的设备文件：/dev/random 和/dev/urandom</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 提取 10 位包含字母、数字和下画线的随机数据。</span>\n<span class="token punctuation">[</span>root@centos7 <span class="token operator">~</span><span class="token punctuation">]</span># tr <span class="token operator">-</span>cd <span class="token string">&#39;_a-zA-Z0-9&#39;</span> <span class="token operator">&lt;</span> <span class="token operator">/</span>dev<span class="token operator">/</span>random <span class="token operator">|</span> head <span class="token operator">-</span>c <span class="token number">10</span>\naw23954A9\n<span class="token punctuation">[</span>root@centos7 <span class="token operator">~</span><span class="token punctuation">]</span># tr <span class="token operator">-</span>cd <span class="token string">&#39;_a-zA-Z0-9&#39;</span> <span class="token operator">&lt;</span> <span class="token operator">/</span>dev<span class="token operator">/</span>urandom <span class="token operator">|</span> head <span class="token operator">-</span>c <span class="token number">10</span>\nLiV9uZVyJN\n<span class="token comment">// 提取 10 位包含存数字的随机数据。</span>\n<span class="token punctuation">[</span>root@centos7 <span class="token operator">~</span><span class="token punctuation">]</span># tr <span class="token operator">-</span>cd <span class="token string">&#39;0-9&#39;</span> <span class="token operator">&lt;</span> <span class="token operator">/</span>dev<span class="token operator">/</span>random <span class="token operator">|</span> head <span class="token operator">-</span>c <span class="token number">10</span>\n<span class="token number">7565203215</span>\n<span class="token punctuation">[</span>root@centos7 <span class="token operator">~</span><span class="token punctuation">]</span># tr <span class="token operator">-</span>cd <span class="token string">&#39;0-9&#39;</span> <span class="token operator">&lt;</span> <span class="token operator">/</span>dev<span class="token operator">/</span>urandom <span class="token operator">|</span> head <span class="token operator">-</span>c <span class="token number">10</span>\n<span class="token number">5690607214</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',12),e={},t=(0,a(3744).Z)(e,[["render",function(n,s){return p}]])}}]);