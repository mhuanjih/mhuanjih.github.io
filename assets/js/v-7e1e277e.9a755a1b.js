"use strict";(self.webpackChunkblog_demo=self.webpackChunkblog_demo||[]).push([[695],{8343:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-7e1e277e",path:"/base/plugin.html",title:"vue项目中的接口调用",lang:"zh-CN",frontmatter:{date:"2022/1/15 12:42 ",title:"vue项目中的接口调用",tag:["Vue"]},excerpt:"",headers:[],git:{updatedTime:null,contributors:[]}}},3498:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<p>在企业开发过程中，往往有着明确的前后端的分工，前端负责接收、使用接口，后端负责编写、处理接口。</p><p>对于前端如何使用接口，今天在Vue中进行讲解。</p><p>一个项目往往由这几个部分组成。</p><img src="https://tuchuang-1313331077.cos.ap-beijing.myqcloud.com/博客/vue/note/1.png" alt=""><img src="https://tuchuang-1313331077.cos.ap-beijing.myqcloud.com/博客/vue/note/2.png" alt=""><p>在src文件夹中,有这么些内容。</p><p>我们常常把接口文件，新建一个文件夹在src下，命名为api，api内的文件便是接口文件。</p><p>通常把后端的接口写在api文件夹下，自己命名为xxx.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 登录</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/api/court/login&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>\n    data\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 获取验证码</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">captchaImage</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/api/captchaImage&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>\n    params\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n对于需要添加信息在头部的，可以这么写\n\n<span class="token comment">// 获取登录用户信息</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/api/court/getInfo&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>\n    params<span class="token punctuation">,</span>\n    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">&#39;Authorization&#39;</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span>Authorization<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>这个就是request.js 文件的内容</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>\n<span class="token comment">// import { getToken } from &#39;@/utils/auth&#39;</span>\n\n<span class="token comment">// create an axios instance</span>\n<span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// 外网更新</span>\n  <span class="token comment">// baseURL: &#39;http://xxxxx&#39;,</span>\n  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> <span class="token string">&#39;/xxxxx&#39;</span><span class="token punctuation">,</span>  \n  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">5000</span> <span class="token comment">// request timeout</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> service\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>项目的页面往往写在views中，每个页面设一个文件夹，其中index.vue 内容则是本页面的内容</p><p>，在页面中，如果我们需要使用某个接口。则需要进行引入操作。通过 import {接口名1、接口名2} from &#39; api文件地址 &#39;</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> login<span class="token punctuation">,</span>captchaImage<span class="token punctuation">,</span>getInfo<span class="token punctuation">,</span>logOut<span class="token punctuation">,</span>reset <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/login&#39;</span>\nfrom后所跟的就是api中文件的地址路径\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>接口往往是在方法中进行调用，对于不同接口 ，需要的参数也不一样，根据需求，我们传入对应的参数即可。图中的 captchaImage、以及login就是接口信息。</p><p>接口的使用格式：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">接口名</span><span class="token punctuation">(</span><span class="token punctuation">{</span>参数<span class="token number">1</span><span class="token operator">:</span>页面中的参<span class="token number">1</span>，参数<span class="token number">2</span>：页面中的参数<span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment">//res就是调用接口后，后台返回过来的结果，一般数据储存在res.data.data中，具体情况而论</span>\n           \n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这样就是接口调用的全部过程了。附上控制台信息图以及apipost接口图。</p>',18),e={},t=(0,a(3744).Z)(e,[["render",function(n,s){return p}]])}}]);